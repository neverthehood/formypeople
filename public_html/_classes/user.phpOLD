<?php
// Управление пользователями
class user{

	static $statistic=1;// Включить лог действий пользователей

static function groupList(){
	return mysql::getArray("SELECT * FROM `user_group` ORDER BY `group` ASC");
	}

// Сохранение пользователя
static function userSave($user){
	if($user['id']==0){
		mysql::query("INSERT INTO `users` SET 
		locked='".escape($user['locked'])."',
		name='".escape($user['name'])."',
		active='1',
		pass='".escape(md5($user['pass']))."',
		code='".escape($user['code'])."',
		mail='".escape($user['mail'])."',
		phone='".escape($user['phone'])."',
		`group`='".escape($user['group'])."',
		description='".escape($user['description'])."',
		parent='".escape($_SESSION['user']['id'])."',
		lastvizit='0',
		register=NOW()");
		if(mysql_errno()==0) {
			$id=mysql_insert_id();
			user::log('user','Создал пользователя "'.htmlspecialchars($user['name']).'"');
			return $id;
			}
		else return false;
		}
	else {
		mysql::query("UPDATE `users` SET 
		locked='".escape($user['locked'])."',
		name='".escape($user['name'])."',
		mail='".escape($user['mail'])."',
		phone='".escape($user['phone'])."',
		`group`='".escape($user['group'])."',
		description='".escape($user['description'])."' 
		WHERE id='".escape($user['id'])."' LIMIT 1");
		if(mysql_errno()==0) {
			user::log('user','Изменил данные пользователя "'.htmlspecialchars($user['name']).'"');
			return $user['id'];
			}
		else return false;
		}
	}

// Получение информации о пользователе
static function userInfo($user){
	return mysql::getArray("SELECT * FROM `users` WHERE id='".escape($user)."' LIMIT 1", true);
	}

// Список пользователей
// На входе группа, страница, к-во на страницу
static function userList($group=false, $page=0, $perPage=50, $whereClause=false, $orderBy=false){
	$where=array();
	if($whereClause!=false) $where[]=$whereClause;
	if($group!='' && $group!=false) $where[]=" t1.`group`='".escape($group)."' ";
	if($orderBy==false) $orderBy="t1.id DESC";
	$page=onlyDigit($page);
	if($perPage!==false) $perPage=onlyDigit($perPage);
	else $perPage=50;
	$start=$page*$perPage;
		
	$array=mysql::getArray("SELECT SQL_CALC_FOUND_ROWS t1.id, t1.locked, t1.active, t1.name, t1.mail, t1.group, UNIX_TIMESTAMP(t1.lastvizit) AS lastvizit, t2.groupname
	FROM
		`users` AS t1
		JOIN `user_group` AS t2 ON t2.`group`=t1.`group`
	WHERE ".implode(" AND ",$where)." ORDER BY ".$orderBy." LIMIT ".escape($start).",".escape($perPage));
	return $array;
	}
	
	
	// Список заказов
	static function orderList($user=false, $page=0, $perPage=50, $whereClause=false, $orderBy=false){
		$where=array();
		
		if($user!==false) $where[]="t1.user='".escape($user)."'";
		if($whereClause!=false) $where[]=$whereClause;
		if($orderBy==false) $orderBy="t1.id DESC";
		$page=onlyDigit($page);
		if($perPage!==false) $perPage=onlyDigit($perPage);
		else $perPage=50;
		$start=$page*$perPage;
		return mysql::getArray("SELECT 
			t1.*,
			unix_timestamp(t1.create) AS `create`,
			t2.name AS username
			FROM
				`zakaz` AS t1
				JOIN `users` AS t2 ON t2.id=t1.user
			WHERE ".implode(" AND ",$where)." ORDER BY ".$orderBy." LIMIT ".escape($start).",".escape($perPage));
	}

	// Логирование действий пользователя
	static function log($block,$message){
		if(user::$statistic==1) {
			if(isset($_SESSION['user']['id'])) mysql::query("INSERT INTO `user_action` SET user='".escape($_SESSION['user']['id'])."', module='".escape($block)."', action='".escape($message)."'");
		}
	}
		
	// Получение данных о действиях пользователя или группы
	static function getLog($user=false,$group=false,$page=0){
		$perPage=50;
		$start=$page*$perPage;
        $where=array("t1.id>0");
		if($user!==false) $where[]="t1.user='".escape($user)."'";
		if($group!==false) $where[]="t2.group='".escape($group)."'";
		$sql="SELECT SQL_CALC_FOUND_ROWS t2.name AS username, t1.id, t1.user, t1.action, t3.group, t3.groupname, UNIX_TIMESTAMP (t1.timestamp) AS stamp
			FROM `user_action` AS t1
				JOIN `users` AS t2 ON t2.id=t1.user
				JOIN `user_group` AS t3 ON t3.group=t2.group
			WHERE ".implode(" AND ",$where)." 
			ORDER BY t1.id DESC LIMIT ".escape($start).",".escape($perPage);
		return mysql::getArray($sql);
		}

    // Получение всех прав заданного пользователя
    static function permission($userId){
        $perm=false;
        $array=mysql::getArray("SELECT permission.module, permission.permit FROM `users`,`permission`
        WHERE users.id='".escape($userId)."' AND permission.group=users.group");
        if($array!=false){
           foreach($array AS $val){
                $perm[$val['module']]=$val['permit'];
           }
        }
        return $perm;
    }

    // Получение всех прав для заданной группы
    static function groupPermission($groupId){
        $perm=false;
        $array=mysql::getArray("SELECT module,permit FROM `permission`
        WHERE `group`='".escape($groupId)."' AND permission.group=users.group");
        if($array!=false){
            foreach($array AS $val){
                $perm[$val['module']]=$val['permit'];
            }
        }
        return $perm;
    }
	
	// Возвращает TRUE, если текущему пользователю разрешен
//	static function permit($module){
//		global $_SESSION;
//		$module=trim($module);
//		if(isset($_SESSION['user'])){
//			$value=$_SESSION['user']['perms'][$module][$action];
//			if($value!=0 || $_SESSION['user']['group']==0) return true;
//			else return false;
//			}
//		else return false;
//		}

    // генерация случайного пароля
    static function generatePassword($len=10){
        $pass="";
        $symbArray="1AaB2bCc3DdE4eFfGg5HhiJ6jKkL7MmN8nOoP9pQqR0rSsT1tUuV9vWw3XxYyZz";
        for($i=1;$i<=$len;$i++){ $pass.=$symbArray[rand(0,(strlen($symbArray)-1))]; }
        return $pass;
    }
	
// Возвращает IP адрес пользователя из массива SERVER
static function getIp(){
	$ip = false;
	if (isset($_SERVER['HTTP_X_FORWARDED_FOR'])) $ipa[] = trim(strtok($_SERVER['HTTP_X_FORWARDED_FOR'], ','));
	if (isset($_SERVER['HTTP_CLIENT_IP'])) $ipa[] = $_SERVER['HTTP_CLIENT_IP'];       
	if (isset($_SERVER['REMOTE_ADDR'])) $ipa[] = $_SERVER['REMOTE_ADDR'];
	if (isset($_SERVER['HTTP_X_REAL_IP'])) $ipa[] = $_SERVER['HTTP_X_REAL_IP'];
    foreach($ipa as $ips){
		if(user::isValidIp($ips)){ $ip = $ips; break; }
	}
    return $ip;
}

// Проверка валидности IP
static function isValidIp($ip=null){
	if(preg_match("#^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$#", $ip)) return true;
	return false;
}

	
	
}
?>